
center = [1,1];
radius = 10;
thickness = 2;
masked_image = stack_info.mask;
mask_value = 1;

% Get image dimensions
[height, width] = size(masked_image);

% Extract center coordinates
center_row = center(1);
center_col = center(2);

% Calculate the bounding box for the outer circle (for efficiency)
outer_radius = radius + thickness;
row_min = max(1, floor(center_row - outer_radius));
col_min = max(1, floor(center_col - outer_radius));
row_max = min(height, ceil(center_row + outer_radius));
col_max = min(width, ceil(center_col + outer_radius));

fullRing_row_min = floor(center_row - outer_radius);
fullRing_col_min = floor(center_col - outer_radius);
fullRing_row_max = ceil(center_row + outer_radius);
fullRing_col_max = ceil(center_col + outer_radius);

% If the circle is completely outside the image
if row_min > height || col_min > width || row_max < 1 || col_max < 1
    percentage = 0;
    return;
end

% Create coordinate matrices for the region of interest
[fullRing_cols, fullRing_rows] = meshgrid(fullRing_col_min:fullRing_col_max, fullRing_row_min:fullRing_row_max);
% Create coordinate matrices for the region of interest
[cols, rows] = meshgrid(col_min:col_max, row_min:row_max);

% Calculate distance from each pixel to the center
% Calculate distance from each pixel to the center
dist_from_center = sqrt((rows - center_row).^2 + (cols - center_col).^2);dist_from_center = sqrt((rows - center_row).^2 + (cols - center_col).^2);
% Calculate distance from each pixel to the center
dist_from_center = sqrt((rows - center_row).^2 + (cols - center_col).^2);

% Create a mask for the circular ring
inner_radius = max(0, radius - thickness);
ring_mask = (dist_from_center >= inner_radius) & (dist_from_center <= outer_radius);

% Extract the region of interest from the masked image
roi = masked_image(row_min:row_max, col_min:col_max);

% Count pixels in the ring
total_ring_pixels = sum(ring_mask(:));

% Count non-masked pixels in the ring
valid_ring_pixels = sum(sum(ring_mask==1 & (roi ~= mask_value)));

% Calculate percentage
if total_ring_pixels > 0
    percentage = (valid_ring_pixels / total_ring_pixels);
else
    percentage = 0;
end

 

